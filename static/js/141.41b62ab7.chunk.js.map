{"version":3,"file":"static/js/141.41b62ab7.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.unsetTransforms();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureInitialState();\n        });\n        // Write\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.renderEndStyles();\n        });\n        // Read\n        toResolve.forEach((resolver) => {\n            resolver.needsMeasurement && resolver.measureEndState();\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    unsetTransforms() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, removeNonTranslationalTransform, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    unsetTransforms() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        this.removedTransforms = removeNonTranslationalTransform(element);\n        const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        element.getValue(name, finalKeyframe).jump(finalKeyframe, false);\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n    }\n    renderEndStyles() {\n        this.element.render();\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        if (name === \"height\" && this.suspendedScrollY !== undefined) {\n            window.scrollTo(0, this.suspendedScrollY);\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved)\n            flushKeyframeResolvers();\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        const { name, type, velocity, delay, onComplete, onUpdate } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...this.initPlayback(keyframes, finalKeyframe),\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = () => {\n                resolve();\n                this.updateFinishedPromise();\n            };\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.state = \"idle\";\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.teardown();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let duration = this.options.duration || 300;\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            duration = pregeneratedAnimation.duration;\n            this.options.times = pregeneratedAnimation.times;\n            this.options.ease = pregeneratedAnimation.ease;\n        }\n        const { motionValue, name } = this.options;\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n                this.updateFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.isStopped = true;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n            });\n            motionValue.setWithVelocity(sampleAnimation.sample(this.time - sampleDelta).value, sampleAnimation.sample(this.time).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.14\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.14\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.14 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","forceRender","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","createContext","transformPagePoint","p","isStatic","reducedMotion","Queue","constructor","order","scheduled","Set","add","process","remove","index","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","arguments","queue","cancel","frameData","createRenderStep","processStep","stepId","processBatch","MotionGlobalConfig","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","cancelFrame","requestAnimationFrame","noop","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","cancelMicrotask","queueMicrotask","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","wantsHandoff","window","HandoffComplete","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","clearTime","time","newTime","isZeroValueString","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolver","needsMeasurement","unsetTransforms","measureInitialState","renderEndStyles","measureEndState","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","removedTransforms","getValue","removeNonTranslationalTransform","jump","suspendedScrollY","pageYOffset","measuredOrigin","measureViewportBox","finalKeyframeIndex","scrollTo","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","canAnimate","resolveFinishedPromise","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","onStop","teardown","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","setWithVelocity","supports","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}