{"version":3,"file":"static/js/697.bea24db5.chunk.js","mappings":"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","sources":["webpack://client/./src/pages/admin/AllGoods/AllGoods.module.css?b500","pages/admin/AllGoods/AllGoods.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"AllGoods_wrapper__ewvsw\",\"tr\":\"AllGoods_tr__4yibB\",\"trImage\":\"AllGoods_trImage__xl+7p\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './AllGoods.module.css'\nimport axios from '../../../store/axios'\nimport { ToastContainer, toast } from 'react-toastify';\nimport {\n    Typography,\n} from \"@material-tailwind/react\";\nimport { setAllProducts } from '../../../store/slices/serviceDataSlice';\nimport { useNavigate } from 'react-router-dom';\n\nconst AllGoods = () => {\n    const TABLE_HEAD = ['№', 'Названия', 'Топ', 'Стоп-лист', 'Удалить']\n    const allProducts = useSelector(state => state.service.allProducts)\n    const dispatch = useDispatch()\n    const userInfo = useSelector(state => state.user.userInfo)\n    const navigate = useNavigate()\n    const notify = (text, type) => {\n        if (type === 'error') {\n            toast.error(text, 'error')\n        } else {\n            toast.success(text, 'error')\n        }\n    };\n    const deleteProduct = async (id) => {\n        try {\n            console.log(id)\n            const options = {\n                postId: id\n            }\n            const res = await axios.post('/post', options)\n            if (res.status === 200) {\n                dispatch(setAllProducts(res.data))\n                notify('Товар удален', 'success')\n            }\n            console.log(res)\n        } catch (e) {\n            console.log(e)\n            notify('Не получилось удалит товар', 'error')\n        }\n    }\n\n    const addInTop = async (id) => {\n        try {\n            const res = await axios.patch('/post/add-in-top', { postId: id })\n\n            if (res.status === 200) {\n                dispatch(setAllProducts(res.data))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const deleteFromTop = async (id) => {\n        try {\n            const res = await axios.patch('/post/delete-from-top', { postId: id })\n\n            if (res.status === 200) {\n                dispatch(setAllProducts(res.data))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const addInStop = async (id) => {\n        try {\n            const res = await axios.patch('/post/add-in-stop', { postId: id })\n\n            if (res.status === 200) {\n                dispatch(setAllProducts(res.data))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const deleteFromStop = async (id) => {\n        try {\n            const res = await axios.patch('/post/delete-from-stop', { postId: id })\n\n            if (res.status === 200) {\n                dispatch(setAllProducts(res.data))\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n  \n    useEffect(() => {\n      userInfo !== null && userInfo.role !== 'admin' && navigate(-1)\n    })\n    return (\n        <div className={styles.wrapper}>\n            <h2>Все товары</h2>\n            <table className=\"w-full min-w-max table-auto text-left\">\n                <thead>\n                    <tr>\n                        {TABLE_HEAD.map((head) => (\n                            <th\n                                key={head._id}\n                                className=\"border-y border-blue-gray-100 bg-blue-gray-50/50 p-4\"\n                            >\n                                <Typography\n                                    variant=\"small\"\n                                    color=\"blue-gray\"\n                                    className=\"font-normal leading-none opacity-70\"\n                                >\n                                    {head}\n                                </Typography>\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {allProducts !== null &&\n                        allProducts.map((product, index) => {\n                            return (\n                                <tr className={styles.tr} key={index}>\n                                    <td>{index + 1}</td>\n                                    {/* <td><img className={styles.trImage} src={`${url.backendUrl}/${product.img}`} alt=\"\" /></td> */}\n                                    <td>{product.name}</td>\n                                    <td>\n                                        {\n                                            product.topList ? <button\n                                                className='text-red-700 hover:text-white border border-red-400 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-bolder rounded-lg text-xs px-3 py-2 text-center me-2 mb-2 dark:red-green-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-800'\n                                                onClick={() => deleteFromTop(product._id)}\n                                            >\n                                                Из топа\n                                            </button> :\n                                                <button\n                                                    onClick={() => addInTop(product._id)}\n                                                    className='text-green-700 hover:text-white border border-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-bolder rounded-lg text-xs px-3 py-2 text-center me-2 mb-2 dark:border-green-500 dark:text-green-500 dark:hover:text-white dark:hover:bg-green-600 dark:focus:ring-green-800'\n                                                >\n                                                    В топ\n                                                </button>\n                                        }\n                                    </td>\n                                    <td>\n                                        {\n                                            product.stopList ? <button\n                                                className='text-green-700 hover:text-white border border-green-700 hover:bg-green-800 focus:ring-4 focus:outline-none focus:ring-green-300 font-bolder rounded-lg text-xs px-3 py-2 text-center me-2 mb-2 dark:border-green-500 dark:text-green-500 dark:hover:text-white dark:hover:bg-green-600 dark:focus:ring-green-800'\n                                                onClick={() => deleteFromStop(product._id)}\n                                            >\n                                                Из стопа\n                                            </button> :\n                                                <button\n                                                    onClick={() => addInStop(product._id)}\n                                                    className='text-red-700 hover:text-white border border-red-400 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-bolder rounded-lg text-xs px-3 py-2 text-center me-2 mb-2 dark:red-green-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-800'\n                                                >\n                                                    В стоп\n                                                </button>\n                                        }\n                                    </td>\n                                    <td>\n                                        <button\n                                            className='text-red-700 hover:text-white border border-red-400 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-bolder rounded-lg text-xs px-3 py-2 text-center me-2 mb-2 dark:red-green-500 dark:text-red-500 dark:hover:text-white dark:hover:bg-red-600 dark:focus:ring-red-800'\n                                            onClick={() => deleteProduct(product._id)}\n                                        >Удалить\n                                        </button>\n                                    </td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </table>\n            {/* {\n                allProducts !== null &&\n                <>\n                    {\n                        allProducts.map((product, index) => {\n                            return <Card\n                                key={index}\n                                name={product.name}\n                                image={product.img}\n                            />\n                        })\n                    }\n                </>\n            } */}\n            <ToastContainer\n                autoClose={3000} />\n        </div>\n    );\n};\n\nexport default AllGoods;"],"names":["AllGoods","allProducts","useSelector","state","service","dispatch","useDispatch","userInfo","user","navigate","useNavigate","notify","text","type","toast","error","success","useEffect","role","_jsxs","className","styles","children","_jsx","map","head","Typography","variant","color","_id","product","index","name","topList","onClick","async","res","axios","patch","postId","id","status","setAllProducts","data","console","log","deleteFromTop","addInTop","stopList","deleteFromStop","addInStop","options","post","e","deleteProduct","ToastContainer","autoClose"],"sourceRoot":""}