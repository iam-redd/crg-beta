{"version":3,"file":"static/js/992.158551bf.chunk.js","mappings":"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","sources":["webpack://client/./src/pages/UserProfile/Login/Login.module.css?814a","pages/UserProfile/Login/LogIn.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Login_form__ELMd4\",\"btn\":\"Login_btn__UjcZG\",\"tab\":\"Login_tab__B5dU4\",\"container\":\"Login_container__RBDPX\",\"wrapper\":\"Login_wrapper__jJiiz\"};","import React, { useState, useEffect } from 'react';\nimport styles from './Login.module.css'\nimport axios from '../../../store/axios'\nimport { setRegister } from '../../../store/slices/userSlice';\nimport { useDispatch } from 'react-redux'\nimport { useNavigate, Link } from 'react-router-dom'\nimport { Input, Typography } from \"@material-tailwind/react\";\nconst LogIn = ({ setLoginVisible, setRegisterVisible, setCodeFormVisible }) => {\n    const [isVisible, setVisible] = useState(false)\n    const [loginError, setLogin] = useState(false)\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const [errorMessage, setMessage] = useState('')\n    const regex = /^\\+998[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$/\n    const handleSubmit = async (e) => {\n        try {\n            e.preventDefault()\n            setLogin(false)\n            const options = {\n                phoneNumber: e.target.email.value.trim(),\n            }\n            console.log(options)\n            if (options.phoneNumber === '') {\n                handleError('Имя обязательная поля')\n                return\n            }\n            if (!regex.test(options.phoneNumber)) {\n                handleError('Неправильный формат номера телефона')\n                return\n            }\n            const data = await axios.post(`/login`, options)\n            if (data.status === 200) {\n                dispatch(setRegister(options))\n                const response = await axios.post(`/send-code`, options)\n                if (response.status === 200) {\n                    setLoginVisible(false)\n                    setTimeout(()=>{\n                        setCodeFormVisible(true)\n                    },200)\n                    // navigate('/verify-code', { state: { path: 'login' } })\n                }\n                //     const info = data.data\n                //     console.log(info)\n                //     window.localStorage.setItem('token', data.data.token)\n                //     const str = JSON.stringify(info)\n                //     const ciphertext = CryptoJS.AES.encrypt(str, secretKey.secretKey).toString();\n                //     window.localStorage.setItem('data', JSON.stringify(ciphertext))\n                //     dispatch(addData(info))\n                //     setVisible(false)\n            }\n            // if (data.status === 403 || data.status === 404) {\n            //     setLogin(true)\n            // }\n            // return null\n\n        } catch (error) {\n            console.log(error)\n            const status = error?.response?.status || null\n            if (error?.response?.data?.message) {\n                handleError(error?.response?.data?.message)\n            } else if (status === 500) {\n                handleError('Не удалось авторизоватся')\n            } else {\n                handleError(error.message)\n            }\n        }\n    }\n\n\n    const handleError = (message) => {\n        setMessage(message)\n        setLogin(true)\n    }\n    useEffect(() => {\n        setVisible(true)\n        // userInfo !== null && dispatch(logout())\n    }, [setVisible])\n    return (\n        // <div className={`mx-auto my-14  ${styles.container}`}>\n        //     <AnimatePresence>\n        //         {\n        //             isVisible &&\n\n        <form\n            onSubmit={handleSubmit}\n            className={`w-full md:w-max ${styles.form}`}>\n            {/* <p\n                className=\"flex px-4 text-end cursor-pointer justify-end text-red-500\"\n                onClick={() => navigate('/user')}\n            >Закрыть</p> */}\n            <div>\n                <h2 className='text-center font-bold text-lg'>Авторизация</h2>\n                <p className='py-4 text-center'>Добро пожаловать, рады вас видеть. <br /> Чтобы войти в свой аккаунт, пожалуйста введите ваши данные.</p>\n            </div>\n            <Input\n                type=\"text\"\n                label='Ваш номер телефона'\n                name='email'\n                className={styles.input}\n                defaultValue={'+998'} />\n            {loginError &&\n                <Typography\n                    variant=\"small\"\n                    color=\"gray\"\n                    className=\"mt-2 flex items-center gap-1 font-normal\"\n                >\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"currentColor\"\n                        className=\"-mt-px h-4 w-4\"\n                    >\n                        <path\n                            fillRule=\"evenodd\"\n                            d=\"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm8.706-1.442c1.146-.573 2.437.463 2.126 1.706l-.709 2.836.042-.02a.75.75 0 01.67 1.34l-.04.022c-1.147.573-2.438-.463-2.127-1.706l.71-2.836-.042.02a.75.75 0 11-.671-1.34l.041-.022zM12 9a.75.75 0 100-1.5.75.75 0 000 1.5z\"\n                            clipRule=\"evenodd\"\n                        />\n                    </svg>\n                    <p className=\"text-red-500\">{errorMessage}</p>\n                </Typography>\n            }\n            <div className='w-full flex justify-between'>\n                <p className='cursor-pointer'>Забыли пароль?</p>\n            </div>\n            <div className='flex w-full justify-around items-center'>\n                <button\n                    className={styles.btn}\n                >{isVisible ? 'Войти' : 'Загрузка...'}\n                </button>\n                {/* <Link to='/registration'> */}\n                <p className='cursor-pointer '\n                    onClick={() => {\n                        setLoginVisible(false)\n                        setTimeout(() => {\n                            setRegisterVisible(true)\n                        }, 200)\n                    }}>Регистрация</p>\n                {/* </Link> */}\n            </div>\n        </form>\n\n        //             }\n        //         </AnimatePresence>\n        //     </div>\n    );\n};\n\nexport default LogIn;"],"names":["_ref","setLoginVisible","setRegisterVisible","setCodeFormVisible","isVisible","setVisible","useState","loginError","setLogin","dispatch","useDispatch","errorMessage","setMessage","useNavigate","regex","handleError","message","useEffect","_jsxs","onSubmit","async","e","preventDefault","options","phoneNumber","target","email","value","trim","console","log","test","axios","post","status","setRegister","setTimeout","error","_error$response","_error$response2","_error$response2$data","response","_error$response3","_error$response3$data","data","className","concat","styles","form","children","_jsx","Input","type","label","name","input","defaultValue","Typography","variant","color","xmlns","viewBox","fill","fillRule","d","clipRule","btn","onClick"],"sourceRoot":""}