{"version":3,"file":"static/js/197.e09d6960.chunk.js","mappings":"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","sources":["webpack://client/./src/pages/UserProfile/UserSettings/UserSettings.module.css?2034","pages/UserProfile/UserSettings/UserSettings.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userImg\":\"UserSettings_userImg__8hOOH\"};","import React, { useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Outlet } from 'react-router-dom';\nimport axios from '../../.././store/axios'\nimport url from '../../../default.json'\nimport styles from './UserSettings.module.css'\nimport { DefaultSpinner } from \"../../../components/Spinner\";\nimport { addData } from \"../../../store/slices/userSlice\";\nimport { Button, Input, Select, Option } from '@material-tailwind/react';\nimport { toast } from \"react-toastify\";\n\nexport default function MySettings() {\n    const userInfo = useSelector(state => state.user.userInfo)\n    const notifyError = (text) => toast.error(text);\n    const [, setMessage] = useState(null)\n    const [paramsBool, setParams] = useState(false)\n    const [image, setImage] = useState('')\n    const dispatch = useDispatch()\n    async function onSetting(e) {\n        try {\n            e.preventDefault()\n            console.log('start')\n            let options = {\n                name: e.target.name.value,\n                email: e.target.email.value,\n                telegram: e.target.telegram.value,\n                address: e.target.address.value,\n                avatarUrl: image,\n                phoneNumber: e.target.phoneNumber.value\n            }\n\n            const response = await axios.patch(`/update-user-data`, options)\n            if (response.status === 200) {\n                dispatch(addData(response.data))\n                setParams(false)\n                window.location.reload();\n            }\n            console.log('close')\n        } catch (e) {\n            console.log(e)\n            if (e?.response?.status === 500) {\n                notifyError(e.response.data.message)\n            } else {\n                notifyError('Что-то пошло не так')\n            }\n        }\n    }\n\n    const input = useRef()\n    const [isLoading, setLoading] = useState(false)\n    const handleUpload = async () => {\n        try {\n            setParams(false)\n            setLoading(true)\n            setImage('')\n            const image = input.current.files[0]\n            console.log(image)\n            const formData = new FormData();\n            formData.append('image', image);\n            const response = await axios.post(`/upload `, formData);\n            if (response.status === 200) {\n                setImage(response.data.imagePath)\n            }\n            setParams(true)\n        } catch (error) {\n            setMessage(error.message)\n            console.error('Error uploading file:', error);\n        }\n        setLoading(false)\n    };\n\n\n\n\n\n    return (\n        <>\n            <div className=\"mx-auto border-t-2 mt-4\">\n                <h2 className=\"text-center my-4 font-bold text-lg\">Настройки аккаунта</h2>\n                {userInfo ?\n                    <form onSubmit={onSetting}>\n                        <div className=\"mx-auto md:flex justify-center gap-4\">\n                            <div className=\"flex flex-col gap-2 md:border rounded-md p-2 md:border-gray-400 content-center\">\n                                <div className={`mx-auto ${styles.userImg} justify-center items-center`}>\n                                    {\n                                        image !== '' ? <img src={`${url.backendUrl}/${image}`} alt=\"\" /> :\n                                            <>\n                                                {\n                                                    isLoading ? <DefaultSpinner /> : <>\n                                                        {\n                                                            userInfo.avatarUrl !== '' ? <img src={`${url.backendUrl}/${userInfo.avatarUrl}`} alt=\"\" /> : <></>\n                                                        }\n                                                    </>\n                                                }\n                                            </>\n                                    }\n                                </div>\n                                <div className=\"flex justify-center md:justify-end\">\n                                    <input type=\"file\" hidden ref={input} onChange={handleUpload} />\n                                    <div className='flex flex-col gap-2'>\n                                        <p className='text-xs text-red-500 w-56 text-center'>*Рекомендуются фотографии с пропорцией 1:1\n                                            (до 500px)</p>\n                                        <Button\n                                            size=\"md\"\n                                            variant=\"outlined\"\n                                            onClick={() => input.current.click()}\n                                        >\n                                            Изменить\n                                        </Button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"flex flex-col gap-2 p-4 md:p-0\">\n                                <div className=\"flex\">\n                                    <Input\n                                        size=\"md\"\n                                        name=\"name\"\n                                        label=\"Имя:\"\n                                        defaultValue={userInfo?.name ? userInfo.name : ''}\n                                        onInput={(e) => e.target.value.trim() !== userInfo.name ? setParams(true) : setParams(false)} />\n                                </div>\n                                <div>\n                                    <Input\n                                        label=\"Телефон:\"\n                                        defaultValue={userInfo?.phoneNumber ? userInfo.phoneNumber : ''}\n                                        name=\"phoneNumber\"\n                                        disabled={true}\n                                        onInput={(e) => e.target.value.trim() !== userInfo.email ? setParams(true) : setParams(false)} />\n                                </div>\n                                <div>\n                                    <Input\n                                        label=\"Email:\"\n                                        defaultValue={userInfo?.email ? userInfo.email : ''}\n                                        name=\"email\"\n                                        onInput={(e) => e.target.value.trim() !== userInfo.email ? setParams(true) : setParams(false)} />\n                                </div>\n\n                                <div>\n                                    <Input\n                                        label=\"Telegram\"\n                                        defaultValue={userInfo?.telegram ? userInfo.telegram : ''}\n                                        name=\"telegram\"\n                                        onInput={(e) => e.target.value.trim() !== userInfo.telegram ? setParams(true) : setParams(false)}\n                                    />\n                                </div>\n                                <div>\n                                    <Input\n                                        label=\"Адрес\"\n                                        defaultValue={userInfo?.address[0] ? userInfo.address[0] : ''}\n                                        name=\"address\"\n                                        onInput={(e) => e.target.value.trim() !== userInfo.address[0] ? setParams(true) : setParams(false)}\n                                    />\n                                </div>\n                                {userInfo.role === 'superUser' ?\n                                    <div className=\"flex flex-col gap-2\">\n                                        <div>\n                                            <Input label=\"Организация:\" defaultValue={userInfo.userOrganizatsion} />\n                                        </div>\n                                        <div className=\"flex items-center gap-2\">\n                                            <div className=\"flex-1\">\n                                                <Input label=\"Адрес организации:\" />\n                                            </div>\n                                            <Button size=\"sm\" variant=\"outlined\" className=\"flex-none\">+</Button>\n                                        </div>\n                                    </div>\n                                    :\n                                    <div></div>\n                                }\n                            </div>\n                        </div>\n                        <div className=\"flex justify-end gap-2 p-4 md:p-0\">\n                            <Button size=\"md\" variant=\"filled\" color=\"green\" type=\"submit\" disabled={!paramsBool}>Сохранить</Button>\n                            <Button size=\"md\" variant=\"outlined\" color=\"blue-gray\" onClick={() => {\n                                setParams(false)\n                                setImage('')\n                            }}>Отменить</Button>\n                        </div>\n                    </form>\n\n                    : <div></div>\n                }\n            </div>\n            <Outlet />\n        </>\n\n\n    )\n}\n"],"names":["MySettings","userInfo","useSelector","state","user","notifyError","text","toast","error","setMessage","useState","paramsBool","setParams","image","setImage","dispatch","useDispatch","input","useRef","isLoading","setLoading","_jsxs","_Fragment","children","className","_jsx","onSubmit","async","e","preventDefault","console","log","options","name","target","value","email","telegram","address","avatarUrl","phoneNumber","response","axios","patch","status","addData","data","window","location","reload","_e$response","message","concat","styles","userImg","src","url","alt","DefaultSpinner","type","hidden","ref","onChange","current","files","formData","FormData","append","post","imagePath","Button","size","variant","onClick","click","Input","label","defaultValue","onInput","trim","disabled","role","userOrganizatsion","color","Outlet"],"sourceRoot":""}