{"version":3,"file":"static/js/359.c9ec6c1e.chunk.js","mappings":"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","sources":["webpack://client/./src/pages/UserProfile/Registration/Registration.module.css?16b4","webpack://client/./src/pages/UserProfile/Registration/UploadImage/UploadImage.module.css?5246","pages/UserProfile/Registration/UploadImage/UploadImage.js","pages/UserProfile/Registration/Registration.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Registration_form__WnmmE\",\"btn\":\"Registration_btn__zLH0Z\",\"bordered\":\"Registration_bordered__PGNZJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"upload_container\":\"UploadImage_upload_container__fAMD5\",\"progress_container\":\"UploadImage_progress_container__UIjsP\",\"progress_bar\":\"UploadImage_progress_bar__CPQIp\",\"title2\":\"UploadImage_title2__Ih4MP\",\"min_text\":\"UploadImage_min_text__9isho\"};","import React, { useRef, useState } from 'react';\nimport styles from './UploadImage.module.css'\nimport axios from '../../../../store/axios';\nimport icon from '../../../../assets/icons/addImage.png'\nimport url from '../../../../default.json'\nimport { DefaultSpinner } from '../../../../components/Spinner';\nimport {Button} from \"@material-tailwind/react\";\nconst ImageUpload = ({ list, setList }) => {\n    const input = useRef()\n    const [isLoading, setLoading] = useState(false)\n    const handleUpload = async () => {\n        try {\n            setLoading(true)\n            const image = input.current.files[0]\n            console.log(image)\n            const formData = new FormData();\n            formData.append('image', image);\n            const response = await axios.post(`/upload `, formData);\n            setList(response.data.imagePath)\n            console.log(response.data);\n        } catch (error) {\n            console.error('Error uploading file:', error);\n        }\n        setLoading(false)\n    };\n\n\n    return (\n        <div className={styles.upload_container}>\n            <div className={styles.title2}>\n                {\n                    list === null ?\n                        <>\n                            {isLoading ?\n                                <DefaultSpinner /> :\n\n                                <Button onClick={() => input.current.click()}\n                                        variant=\"outlined\"\n                                        className=\"flex items-center gap-3\"\n                                >\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        fill=\"none\"\n                                        viewBox=\"0 0 24 24\"\n                                        strokeWidth={2}\n                                        stroke=\"currentColor\"\n                                        className=\"h-5 w-5\"\n                                    >\n                                        <path\n                                            strokeLinecap=\"round\"\n                                            strokeLinejoin=\"round\"\n                                            d=\"M12 16.5V9.75m0 0l3 3m-3-3l-3 3M6.75 19.5a4.5 4.5 0 01-1.41-8.775 5.25 5.25 0 0110.233-2.33 3 3 0 013.758 3.848A3.752 3.752 0 0118 19.5H6.75z\"\n                                        />\n                                    </svg>\n                                    Загрузите аватарку\n                                </Button>\n                            }\n                        </> :\n                        <img src={`${url.backendUrl}/${list}`} alt=''/>\n                }\n            </div>\n            <input type=\"file\" onChange={handleUpload} accept='image/*' hidden ref={input} />\n        </div>\n    );\n};\n\nexport default ImageUpload;\n","import React, { useEffect, useState } from 'react';\nimport styles from './Registration.module.css'\nimport ImageUpload from './UploadImage/UploadImage';\nimport axios from '../../../store/axios'\nimport { useDispatch } from 'react-redux'\nimport { setRegister } from '../../../store/slices/userSlice'\nimport { Button, Input, Option, Select, Typography } from \"@material-tailwind/react\"\nimport { useNavigate } from 'react-router-dom';\n\nconst Registration = ({ setLoginVisible, setRegisterVisible, setCodeFormVisible }) => {\n    const [uploadedImages, setUploadedImages] = useState(null)\n    // const userInfo = useSelector(state => state.user.userInfo)\n    const [loginError, setLogin] = useState(false)\n    const [btnBool, setBtnBool] = useState(true)\n    const [errorMessage, setMessage] = useState('')\n    const [selectValue, setValue] = useState(null)\n    const regex = /^\\+998[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$/\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const handleSubmit = async (e) => {\n        try {\n            e.preventDefault()\n            console.log(e.target.city.value)\n            setLogin(false)\n            if (e.target.name.value.trim() === '') {\n                handleError('Имя обязательная поля')\n                return\n            }\n            if (!regex.test(e.target.phoneNumber.value.trim())) {\n                handleError('Неправильный формат номера телефона')\n                return\n            }\n            if (e.target.phoneNumber.value.trim() === '') {\n                handleError('Номер телефона обязательная поля')\n                return\n            }\n            if (selectValue.trim() === '') {\n                handleError('Город обязательная поля')\n                return\n            }\n            if (e.target.address.value.trim() === '') {\n                handleError('Адрес обязательная поля')\n                return\n            }\n            // if (e.target.password.value !== e.target.password_try.value) {\n            //     handleError('Пароли введенное вами не совпадает')\n            //     return\n            // }\n            const request = {\n                name: e.target.name.value,\n                phoneNumber: e.target.phoneNumber.value.trim(),\n                city: selectValue,\n                avatarUrl: uploadedImages,\n                address: [e.target.address.value],\n                telegram: e.target.telegram.value,\n            }\n            if (e.target.email.value !== '') request.email = e.target.email.value\n            console.log(request)\n\n            const data = await axios.post('/register-verify', request)\n            if (data.status === 200) {\n                dispatch(setRegister(request))\n                const res = await axios.post('/send-code', { phoneNumber: request.phoneNumber })\n                if (res.status === 200) {\n                    // navigate('/verify-code', { state: { path: 'register' } })\n                    setRegisterVisible(false)\n                    setTimeout(() => {\n                        setCodeFormVisible(true)\n                    }, 200)\n                }\n            } else {\n                handleError('Номер телефона обязательная поля')\n                return\n            }\n        } catch (error) {\n            const res = error?.response || null\n            console.log(error)\n            if (error?.response?.status === 400) {\n                handleError('Ошибка при вводе данных')\n            } else if (error?.response?.status === 500) {\n                handleError('Не удалось зарегистрироватся')\n            } else if (error?.response?.status === 401) {\n                handleError(res.data.message)\n            } else {\n                handleError(error.message)\n            }\n        }\n    }\n\n    const handleError = (message) => {\n        setMessage(message)\n        setLogin(true)\n    }\n    useEffect(() => {\n        // userInfo !== null && dispatch(logout())\n    });\n    return (\n        <div className=''>\n            <div className={`mx-auto my-5 flex w-full`}>\n                <div className={`items-center justify-center m-auto ${styles.bordered}`}>\n                    {/* <p\n                        className=\"px-4 text-xs text-end text-red-500 cursor-pointer\"\n                        onClick={() => navigate('/user')}\n                    >Закрыть</p> */}\n                    <h2 className='text-center font-bold text-lg my-4'>Регистрация</h2>\n                    <div className='flex justify-center mb-4 p-2 items-center text-sm border border-blue-gray-200 rounded-xl'>\n                        <ImageUpload\n                            list={uploadedImages}\n                            setList={setUploadedImages} />\n                    </div>\n\n                    <form\n                        onSubmit={handleSubmit}\n                        className={styles.form}>\n                        <div className='grid gap-2 sm:flex'>\n                            <Input\n                                type=\"text\"\n                                name='name'\n                                placeholder='Василий Пупкин'\n                                label='Имя'\n                                // defaultValue={'kadyrzhan'}\n                            />\n                            <Input\n                                type=\"email\"\n                                name='email'\n                                placeholder='empty@empty.com'\n                                // defaultValue={'test@test.ru'}\n                                label='Электронная почта'\n                            />\n                        </div>\n                        <div className='grid gap-2 sm:flex'>\n                            <Input\n                                type=\"text\"\n                                name='phoneNumber'\n                                placeholder='+998 99 999 99 99'\n                                label='Номер телефона'\n                            />\n\n                            <Input\n                                type=\"text\"\n                                name='telegram'\n                                placeholder='@username'\n                                // defaultValue={'kadyrzhan_23'}\n                                label='Телеграм @username'\n                            />\n                        </div>\n                        <div className='grid gap-2 sm:flex'>\n                            <Select\n                                size=\"md\"\n                                label=\"Ваш город\"\n                                name='city'\n                                onChange={(e) => setValue(e)}>\n                                <Option value='город Ташкент'>город Ташкент</Option>\n                                <Option value='Ташкентская область'>Ташкентская область</Option>\n                                <Option value='Самаркандская область'>Самаркандская область</Option>\n                                <Option value='Ферганская область'>Ферганская область</Option>\n                                <Option value='Хорезмская область'>Хорезмская область</Option>\n                                <Option value='Сырдарьинская область'>Сырдарьинская область</Option>\n                                <Option value='Сурхандарьинская область'>Сурхандарьинская область</Option>\n                                <Option value='Наманганская область'>Наманганская область</Option>\n                                <Option value='Навоийская область'>Навоийская область</Option>\n                                <Option value='Кашкадарьинская область'>Кашкадарьинская область</Option>\n                                <Option value='Джизакская область'>Джизакская область</Option>\n                                <Option value='Бухарская область'>Бухарская область</Option>\n                                <Option value='Андижанская область'>Андижанская область</Option>\n                                <Option value='Республика Каракалпакстан'>Республика Каракалпакстан</Option>\n                            </Select>\n                        </div>\n                        <div className='grid gap-2 sm:flex'>\n                            <Input\n                                type=\"text\"\n                                name='address'\n                                placeholder='улица, дом, квартира'\n                                label='Адрес'\n                            />\n\n                        </div>\n                        {/* <div className='grid gap-2 sm:flex'>\n                            <Input\n                                type=\"password\"\n                                name='password'\n                                label='Пароль'\n                                defaultValue={'123456'}\n                                placeholder='Придумайте пароль'\n                            />\n                            <Input\n                                type='password'\n                                name='password_try'\n                                label='Повторите пароль'\n                                placeholder='Повторите пароль'\n                                defaultValue={'123456'}\n                            />\n                        </div> */}\n                        {loginError &&\n                            <Typography\n                                variant=\"small\"\n                                color=\"gray\"\n                                className=\"mt-2 flex items-center gap-1 font-normal\"\n                            >\n                                <svg\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 24 24\"\n                                    fill=\"currentColor\"\n                                    className=\"-mt-px h-4 w-4\"\n                                >\n                                    <path\n                                        fillRule=\"evenodd\"\n                                        d=\"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm8.706-1.442c1.146-.573 2.437.463 2.126 1.706l-.709 2.836.042-.02a.75.75 0 01.67 1.34l-.04.022c-1.147.573-2.438-.463-2.127-1.706l.71-2.836-.042.02a.75.75 0 11-.671-1.34l.041-.022zM12 9a.75.75 0 100-1.5.75.75 0 000 1.5z\"\n                                        clipRule=\"evenodd\"\n                                    />\n                                </svg>\n                                <p className=\"text-red-500\">{errorMessage}</p>\n                            </Typography>\n                        }\n                        <div className='flex flex-col m-auto items-center'>\n                            <Button\n                                variant='outlined'\n                                color='red'\n                                size='md'\n                                className='mt-4'\n                                disabled={!btnBool}\n                                type='submit'>{ btnBool ? 'Зарегистрироваться' : 'Обработка'}\n                            </Button>\n                            <div className='flex w-full mt-4 text-xs'>\n                                <p className='mr-1'>Уже есть аккаунт?</p>\n                                {/* <Link to='/login'> */}\n                                <p\n                                    className='cursor-pointer text-xs text-red-500 border-b border-b-red-500'\n                                    onClick={() => {\n                                        setRegisterVisible(false)\n                                        setInterval(() => {\n                                            setLoginVisible(true)\n                                        }, 200)\n                                    }}>Войти</p>\n                                {/* </Link> */}\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Registration;"],"names":["_ref","list","setList","input","useRef","isLoading","setLoading","useState","_jsxs","className","styles","children","_jsx","_Fragment","DefaultSpinner","Button","onClick","current","click","variant","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","src","concat","url","alt","type","onChange","async","image","files","console","log","formData","FormData","append","response","axios","post","data","imagePath","error","accept","hidden","ref","setLoginVisible","setRegisterVisible","setCodeFormVisible","uploadedImages","setUploadedImages","loginError","setLogin","btnBool","setBtnBool","errorMessage","setMessage","selectValue","setValue","regex","dispatch","useDispatch","handleError","useNavigate","message","useEffect","ImageUpload","onSubmit","e","preventDefault","target","city","value","name","trim","test","phoneNumber","address","request","avatarUrl","telegram","email","status","setRegister","setTimeout","_error$response","_error$response2","_error$response3","res","Input","placeholder","label","Select","size","Option","Typography","color","fillRule","clipRule","disabled","setInterval"],"sourceRoot":""}